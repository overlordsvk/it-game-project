@model BL.DTO.CharacterDto

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Strength, new { htmlAttributes = new { @class = "form-control field" } })
                @Html.ValidationMessageFor(model => model.Strength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Perception, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Perception, new { htmlAttributes = new { @class = "form-control field" } })
                @Html.ValidationMessageFor(model => model.Perception, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endurance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Endurance, new { htmlAttributes = new { @class = "form-control field" } })
                @Html.ValidationMessageFor(model => model.Endurance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Charisma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Charisma, new { htmlAttributes = new { @class = "form-control field" } })
                @Html.ValidationMessageFor(model => model.Charisma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Intelligence, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Intelligence, new { htmlAttributes = new { @class = "form-control field" } })
                @Html.ValidationMessageFor(model => model.Intelligence, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Agility, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Agility, new { htmlAttributes = new { @class = "form-control field" } })
                @Html.ValidationMessageFor(model => model.Agility, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Luck, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Luck, new { htmlAttributes = new { @class = "form-control field" } })
                @Html.ValidationMessageFor(model => model.Luck, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="warn text-danger" >
                    @Html.DisplayName("Rozdeľ všetkých 35 bodov skúseností") <span class="sum"></span><span>/35</span>
                </div>
                <input type="submit" value="Vytvoriť" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<script
  src="https://code.jquery.com/jquery-3.3.1.min.js"
  integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
  crossorigin="anonymous"></script>
<script>
    function checkValues() {
	  var inputs = $('.field');
      var submitButton = $('input[type=submit]');
      var warn = $('.warn');
      var total = 0;
      var value = 0;
      var inputsCount = 0;
      inputs.each(function(){
 		    value = parseInt($(this).val());
		    if (value >= 1) {
    	    total += value;
            inputsCount++;
            }
        });
        $(".sum").text(total);
          if (total == 35 && inputsCount == 7) {
        warn.prop('hidden', true);
  	    submitButton.prop('disabled', false);
      } else {
        submitButton.prop('disabled', true);
  	    warn.prop('hidden', false);
      }
}

checkValues();
$('.field').on('input',checkValues);
</script>